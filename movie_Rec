import pickle
import streamlit  as st
import pandas as pd
import requests
st.title("MOVIE RECOMMENDATION SYSTEM")


base="dark"
primaryColor="purple"

def fetch_poster(movie_id):
     response=requests.get('https://api.themoviedb.org/3/movie/{}?api_key=9f3ee0a98a064c73ead5540947edd069&language=en-US'.format(movie_id))
     data=response.json()
     return 'https://image.tmdb.org/t/p/original' + data['poster_path']
def recommend(movie):
     movie_index = movies[movies['title'] == movie].index[0]
     distance = similarity[movie_index]

     # this will help to sort in reverse order from high match to low match where we want descending to happend on basis of movie name
     # so we choose x:X[1] and then we need first 5 similar matches so we take 1:6

     movie_list = sorted(list(enumerate(distance)), reverse=True, key=lambda x: x[1])[1:6]
     recomd=[]
     recomm_poster=[]
     for i in movie_list:
          movie_id=movies.iloc[i[0]].id
          recomd.append(movies.iloc[i[0]].title)
          recomm_poster.append(fetch_poster(movie_id))
     return recomd,recomm_poster

movie_dict=pickle.load(open('movie_dict.pkl','rb'))
movies=pd.DataFrame(movie_dict)
similarity=pickle.load(open('similarity.pkl','rb'))
option = st.selectbox(
"Chose any Movie",
movies['title'].values)

if st.button('recommend'):
     name,poster=recommend(option)
     col1, col2, col3 ,col4,col5= st.columns(5)

     with col1:
          st.header(name[0])
          st.image(poster[0])

     with col2:
          st.header(name[1])
          st.image(poster[1])

     with col3:
          st.header(name[2])
          st.image(poster[2])

     with col4:
          st.header(name[3])
          st.image(poster[3])

     with col5:
          st.header(name[4])
          st.image(poster[4])

